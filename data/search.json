{"list":[{"title":"AudioResourceLoader","link":"<a href=\"AudioResourceLoader.html\">AudioResourceLoader</a>"},{"title":"AudioResourceLoader#load","link":"<a href=\"AudioResourceLoader.html#load\">load</a>","description":"<p>AudioElement를 생성해 반환한다.</p>"},{"title":"BoxCollider","link":"<a href=\"BoxCollider.html\">BoxCollider</a>"},{"title":"BoxCollider#boundary","link":"<a href=\"BoxCollider.html#boundary\">boundary</a>","description":"<p>상자의 크기값이다.</p>"},{"title":"BoxCollider#getBoundary","link":"<a href=\"BoxCollider.html#getBoundary\">getBoundary</a>","description":"<p>외형의 크기를 반환한다.</p>"},{"title":"BoxCollider#setBoundary","link":"<a href=\"BoxCollider.html#setBoundary\">setBoundary</a>","description":"<p>외형의 크기를 설정한다.</p>"},{"title":"BoxCollisionResolver","link":"<a href=\"BoxCollisionResolver.html\">BoxCollisionResolver</a>","description":"<p>주 객체를 등록하여 충돌체크를 진행한다.</p>"},{"title":"BoxCollisionResolver#isCollideWithBox","link":"<a href=\"BoxCollisionResolver.html#isCollideWithBox\">isCollideWithBox</a>","description":"<p>상자와 상자가 충돌했다면 true를 반환한다.</p>"},{"title":"BoxCollisionResolver#isCollideWithCircle","link":"<a href=\"BoxCollisionResolver.html#isCollideWithCircle\">isCollideWithCircle</a>","description":"<p>상자와 원이 충돌했다면 true를 반환한다.</p>"},{"title":"BoxCollisionResolver#resolveBoxCollision","link":"<a href=\"BoxCollisionResolver.html#resolveBoxCollision\">resolveBoxCollision</a>","description":"<p>상자와 상자가 충돌했을 때 충돌깊이와 반작용방향을 반환한다.</p>\n<pre><code>          +-------+\n+-----+   |       |\n|  x  |   |   x   |\n+-----+   |       |\n          +-------+\n\n   +--+   +---+    &lt;-- 가로 길이의 절반\n   +----------+    &lt;-- 중심간의 거리\n</code></pre>\n<p>각 상자의 길이의 절반의 합이 중심간의 거리보다 작을 때에만 충돌이다.\n이 때 충돌한 깊이는 각 길이의 절반의 합과 중심간의 거리의 차로 구해진다.</p>"},{"title":"BoxCollisionResolver#resolveCircleCollision","link":"<a href=\"BoxCollisionResolver.html#resolveCircleCollision\">resolveCircleCollision</a>","description":"<p>원이 상자와 충돌했을 때 충돌깊이와 반작용방향을 반환한다.</p>"},{"title":"Circle","link":"<a href=\"Circle.html\">Circle</a>"},{"title":"Circle#draw","link":"<a href=\"Circle.html#draw\">draw</a>","description":"<p>화면에 원과 윤곽선을 그린다.</p>"},{"title":"Circle#getBoundary","link":"<a href=\"Circle.html#getBoundary\">getBoundary</a>","description":"<p>원의 외형을 반환한다.\n원의 외형의 크기는 반지름으로 나타내므로, 외형의 반지름이 반환된다.</p>"},{"title":"Circle#getWorldBoundary","link":"<a href=\"Circle.html#getWorldBoundary\">getWorldBoundary</a>","description":"<p>원의 화면상 반지름의 길이를 반환한다.\n사실 scale이 Vector라서 정확히는 잘못된 함수다.\n물리엔진에서 scale값을 고려하고 있지만 원에 대해서는 그렇지 않다.\n이 함수에는 worldScale의 x와 y값을 더한 후 2로 나눈 값을 반지름에 곱하고 있다.\n가급적이면 원의 scale을 변경하지 않아야 하고,\n변경하더라도 scale의 x와 y값을 같은 값으로 설정하여야 정상적으로 작동한다.</p>"},{"title":"Circle#isMouseOver","link":"<a href=\"Circle.html#isMouseOver\">isMouseOver</a>","description":"<p>이 객체위에 마우스가 올라가 있는지를 반환한다.\n원의 경우 반지름을 이용한 계산을 해야한다.</p>"},{"title":"Circle#isStroke","link":"<a href=\"Circle.html#isStroke\">isStroke</a>","description":"<p>윤곽선을 그릴 것인지를 의미한다.\n윤곽선을 그리기 위해서는 옵션에서 strokeColor나\nstrokeWidth를 설정하여야한다.</p>"},{"title":"Circle#radius","link":"<a href=\"Circle.html#radius\">radius</a>","description":"<p>원의 반지름을 의미한다.\n기본값은 5다.</p>"},{"title":"Circle#setStrokeWidth","link":"<a href=\"Circle.html#setStrokeWidth\">setStrokeWidth</a>","description":"<p>윤곽선의 두께를 설정한다.</p>"},{"title":"Circle#strokeColor","link":"<a href=\"Circle.html#strokeColor\">strokeColor</a>","description":"<p>윤곽선의 색상을 의미한다.\n만약 옵션에서 윤곽선에 대한 정보가 있다면 isStroke는 true로 설정되고\n윤곽선의 색상이 설정된다.</p>"},{"title":"CircleCollider","link":"<a href=\"CircleCollider.html\">CircleCollider</a>"},{"title":"CircleCollider#getBoundary","link":"<a href=\"CircleCollider.html#getBoundary\">getBoundary</a>","description":"<p>외형의 크기를 반환한다.\n원 형태이므로 반지름을 반환한다.</p>"},{"title":"CircleCollider#setBoundary","link":"<a href=\"CircleCollider.html#setBoundary\">setBoundary</a>","description":"<p>외형의 크기를 설정한다.\n원 형태이므로 반지름의 길이가 외형의 크기가 된다.</p>"},{"title":"CircleCollisionResolver","link":"<a href=\"CircleCollisionResolver.html\">CircleCollisionResolver</a>","description":"<p>주 객체를 등록하여 충돌체크를 진행한다.</p>"},{"title":"CircleCollisionResolver#isCollideWithBox","link":"<a href=\"CircleCollisionResolver.html#isCollideWithBox\">isCollideWithBox</a>","description":"<p>원과 상자가 충돌했다면 true를 반환한다.</p>"},{"title":"CircleCollisionResolver#isCollideWithCircle","link":"<a href=\"CircleCollisionResolver.html#isCollideWithCircle\">isCollideWithCircle</a>","description":"<p>원과 원이 충돌했다면 true를 반환한다.</p>\n<pre><code>              *******\n  *****      **     **\n *     *     *       *\n *  x  *     *   x   *\n *     *     *       *\n  *****      **     **\n              *******\n    +--+     +---+     &lt;-- 원의 반지름\n    +------------+     &lt;-- 중심간의 거리\n</code></pre>\n<p>두 원의 반지름의 합이 중심간의 거리보다 작다면 충돌하지 않은 셈이다.</p>"},{"title":"CircleCollisionResolver#resolveBoxCollision","link":"<a href=\"CircleCollisionResolver.html#resolveBoxCollision\">resolveBoxCollision</a>","description":"<p>원이 상자와 충돌했을 때 충돌깊이와 반작용방향을 반환한다.</p>"},{"title":"CircleCollisionResolver#resolveCircleCollision","link":"<a href=\"CircleCollisionResolver.html#resolveCircleCollision\">resolveCircleCollision</a>","description":"<p>원과 원이 충돌했을 때 충돌깊이와 반작용방향을 반환한다.</p>"},{"title":"Collider","link":"<a href=\"Collider.html\">Collider</a>"},{"title":"Collider#getOffset","link":"<a href=\"Collider.html#getOffset\">getOffset</a>","description":"<p>외형의 오프셋값을 반환한다.</p>"},{"title":"Collider#offset","link":"<a href=\"Collider.html#offset\">offset</a>","description":"<p>이 값은 물체의 중심에서 외형의 위치가 얼마나 떨어져 있는지를 나타낸다.</p>"},{"title":"Collider#setOffset","link":"<a href=\"Collider.html#setOffset\">setOffset</a>","description":"<p>외형의 오프셋을 특정값으로 설정한다.</p>"},{"title":"CollisionResolver","link":"<a href=\"CollisionResolver.html\">CollisionResolver</a>","description":"<p>주 객체를 먼저 등록하여 충돌체크를 진행한다.</p>"},{"title":"CollisionResolver#isCollideWith","link":"<a href=\"CollisionResolver.html#isCollideWith\">isCollideWith</a>","description":"<p>다른 객체의 Collider 타입에 맞춰 충돌 감지 방법을 사용하여\n충돌 유무를 반환한다.</p>"},{"title":"CollisionResolver#isCollideWithBox","link":"<a href=\"CollisionResolver.html#isCollideWithBox\">isCollideWithBox</a>","description":"<p>이 객체를 상속받으면 이 밑으로 등장하는 모든 메서드들을 재정의해야한다.</p>"},{"title":"CollisionResolver#resolveCollision","link":"<a href=\"CollisionResolver.html#resolveCollision\">resolveCollision</a>","description":"<p>객체의 Collider 타입에 맞춰 manifold를 생성해 반환한다.</p>"},{"title":"Color","link":"<a href=\"Color.html\">Color</a>","description":"<p>각각의 rgba값을 설정한다.</p>"},{"title":"Color#toArray","link":"<a href=\"Color.html#toArray\">toArray</a>","description":"<p>각각의 색상값을 배열로 담아 반환한다.\n반환 형태는 [r, g, b, a] 이다.</p>"},{"title":"DefaultLayer","link":"<a href=\"DefaultLayer.html\">DefaultLayer</a>"},{"title":"DestroyManager","link":"<a href=\"DestroyManager.html\">DestroyManager</a>"},{"title":"DestroyManager#objectQueue","link":"<a href=\"DestroyManager.html#objectQueue\">objectQueue</a>","description":"<p>삭제되길 기다리는 객체들을 저장한 큐</p>"},{"title":"DestroyManager.destroyAll","link":"<a href=\"DestroyManager.html#.destroyAll\">destroyAll</a>","description":"<p>큐가 빌 때까지 큐에 들어있는 객체를 삭제한다.\n삭제한다는 말은 그 객체를 참조하는 값을 모두 지운다는 말이다.</p>"},{"title":"DestroyManager.push","link":"<a href=\"DestroyManager.html#.push\">push</a>","description":"<p>큐에 객체를 넣는다.</p>"},{"title":"Engine","link":"<a href=\"Engine.html\">Engine</a>"},{"title":"Engine#inputManager","link":"<a href=\"Engine.html#inputManager\">inputManager</a>","description":"<p>입력 이벤트를 관리하는 객체다.</p>"},{"title":"Engine#run","link":"<a href=\"Engine.html#run\">run</a>","description":"<p>게임 파이프라인에 대해서는 이 게시글을 참고했다.\nhttps://developer.ibm.com/tutorials/wa-build2dphysicsengine/#physics-loop-step</p>"},{"title":"Engine#timer","link":"<a href=\"Engine.html#timer\">timer</a>","description":"<p>deltaTime을 관리하는 객체다.</p>"},{"title":"Engine.init","link":"<a href=\"Engine.html#.init\">init</a>","description":"<p>인자로 전달된 값을 이용해 엔진을 초기화한다.</p>"},{"title":"Engine.initWithForm","link":"<a href=\"Engine.html#.initWithForm\">initWithForm</a>","description":"<p>form으로부터 전달된 값으로 엔진을 초기화한다.</p>"},{"title":"GameObject","link":"<a href=\"GameObject.html\">GameObject</a>"},{"title":"GameObject#activate","link":"<a href=\"GameObject.html#activate\">activate</a>","description":"<p>isActive를 true로 설정한다.</p>"},{"title":"GameObject#addAcceleration","link":"<a href=\"GameObject.html#addAcceleration\">addAcceleration</a>","description":"<p>이 객체의 가속도를 특정값만큼 증가시킨다.</p>"},{"title":"GameObject#addChild","link":"<a href=\"GameObject.html#addChild\">addChild</a>","description":"<p>자식 목록에 인자로 전달된 객체를 추가한다.</p>"},{"title":"GameObject#addPosition","link":"<a href=\"GameObject.html#addPosition\">addPosition</a>","description":"<p>이 객체의 좌표값에 특정값을 더한다.</p>"},{"title":"GameObject#addRotation","link":"<a href=\"GameObject.html#addRotation\">addRotation</a>","description":"<p>이 객체의 각도(degree)를 특정값만큼 변경한다.</p>"},{"title":"GameObject#addScale","link":"<a href=\"GameObject.html#addScale\">addScale</a>","description":"<p>이 객체의 크기를 특정값만큼 변경한다.</p>"},{"title":"GameObject#addVelocity","link":"<a href=\"GameObject.html#addVelocity\">addVelocity</a>","description":"<p>이 객체의 속도를 특정값만큼 증가시킨다.</p>"},{"title":"GameObject#afterDraw","link":"<a href=\"GameObject.html#afterDraw\">afterDraw</a>","description":"<p>일반적으로 beforeDraw()에서 전처리했던 것을 원래대로 돌리는 작업을 한다.\nbeforeDraw()를 오버라이드했다면 이 함수도 오버라이드하여\n수정된 context2d를 원래대로 돌려놓아야 한다.</p>"},{"title":"GameObject#beforeDraw","link":"<a href=\"GameObject.html#beforeDraw\">beforeDraw</a>","description":"<p>렌더링 전에 색상값을 갱신한다거나 다른 작업이 미리 처리되어야 하는 경우\n이 함수를 오버라이드해서 사용하면 된다.</p>\n<p>이 객체에서는 기본적으로 색상값을 적용시키기 위해 globalAlpha값을 조절한다.\ncontext2d.save()를 통해 현재 설정값을 저장해두었으므로,\n마음대로 변경 후 context2d.restore()로 되돌리게 된다.\n따라서 현재 설정값이 자식들의 렌더링에 사용된다.</p>"},{"title":"GameObject#calculateMatrix","link":"<a href=\"GameObject.html#calculateMatrix\">calculateMatrix</a>","description":"<p>transform을 matrix로 변환한다.\n이 때 부모 객체가 있다면 행렬곱을 수행해 두 matrix를 결합한다.\n이 객체의 transform만 변환을 수행하지 않고 이 객체의 자식들에게도\ncalculateMatrix를 호출한다.</p>"},{"title":"GameObject#childList","link":"<a href=\"GameObject.html#childList\">childList</a>","description":"<p>이 객체의 자식들을 저장할 테이블이다.</p>"},{"title":"GameObject#collider","link":"<a href=\"GameObject.html#collider\">collider</a>","description":"<p>이 객체의 Collision 타입을 나타낸다.\n기본값으로는 상자 형태(BoxCollider)를 사용한다.</p>"},{"title":"GameObject#color","link":"<a href=\"GameObject.html#color\">color</a>","description":"<p>렌더링에 사용될 색상값이다.</p>"},{"title":"GameObject#context2d","link":"<a href=\"GameObject.html#context2d\">context2d</a>","description":"<p>canvas에 이 객체를 렌더링할 때 사용할 context다.</p>"},{"title":"GameObject#deactivate","link":"<a href=\"GameObject.html#deactivate\">deactivate</a>","description":"<p>isActive를 false로 설정한다.</p>"},{"title":"GameObject#destroy","link":"<a href=\"GameObject.html#destroy\">destroy</a>","description":"<p>이 객체를 씬으로부터 제거한다.\n이 객체의 자식 테이블에 있는 모든 객체들도 연달아 제거된다.</p>\n<p>이 객체를 제거하기위해 DestroyManager에 등록한다.\n이 객체가 등록되었다면 업데이트가 끝난 직후\nDestroyManager가 등록된 객체들을 제거한다.</p>"},{"title":"GameObject#draw","link":"<a href=\"GameObject.html#draw\">draw</a>","description":"<p>이 함수는 GameObject를 상속받은 객체마다 다르게 동작한다.\nGameObject 자체는 렌더링할 대상이 없지만 Sprite나, Rect, Text 등\nGmaeObject를 상속받은 객체들은 명확히 렌더링할 대상이 존재한다.\n그 때 이 함수안에서 어떻게 렌더링할건지 정의를 해 놓으면 된다.\nsuper.render()를 먼저 호출하고 대상을 렌더링할 경우\n이미 렌더링된 자식 오브젝트를 덮어씌워 렌더링할 수 있으므로\n렌더링만큼은 draw 함수 내에서만 정의를 하는게 좋다.</p>"},{"title":"GameObject#getAcceleration","link":"<a href=\"GameObject.html#getAcceleration\">getAcceleration</a>","description":"<p>이 객체의 가속도를 반환한다.</p>"},{"title":"GameObject#getBounceness","link":"<a href=\"GameObject.html#getBounceness\">getBounceness</a>","description":"<p>이 객체의 탄성값을 반환한다.</p>"},{"title":"GameObject#getBoundary","link":"<a href=\"GameObject.html#getBoundary\">getBoundary</a>","description":"<p>이 객체의 외형의 크기를 반환한다.\n기본적으로 BoxCollider를 사용하기 때문에 상자 형태의 크기가 반환된다.</p>"},{"title":"GameObject#getColliderOffset","link":"<a href=\"GameObject.html#getColliderOffset\">getColliderOffset</a>","description":"<p>이 객체의 외형의 오프셋값을 반환한다.</p>"},{"title":"GameObject#getColliderWorldPosition","link":"<a href=\"GameObject.html#getColliderWorldPosition\">getColliderWorldPosition</a>","description":"<p>이 객체의 화면상 좌표값에 외형의 오프셋값을 더한 좌표를 반환한다.\n이 때 오프셋에도 WorldScale을 적용해 더한다.</p>"},{"title":"GameObject#getDynamicFriction","link":"<a href=\"GameObject.html#getDynamicFriction\">getDynamicFriction</a>","description":"<p>이 객체의 운동 마찰 계수를 반환한다.</p>"},{"title":"GameObject#getInverseMass","link":"<a href=\"GameObject.html#getInverseMass\">getInverseMass</a>","description":"<p>이 객체의 질량값의 역수를 반환한다.</p>"},{"title":"GameObject#getLayer","link":"<a href=\"GameObject.html#getLayer\">getLayer</a>","description":"<p>레이어를 반환한다.</p>"},{"title":"GameObject#getMass","link":"<a href=\"GameObject.html#getMass\">getMass</a>","description":"<p>이 객체의 질량값을 반환한다.</p>"},{"title":"GameObject#getMatrix","link":"<a href=\"GameObject.html#getMatrix\">getMatrix</a>","description":"<p>이 객체의 matrix를 반환한다.</p>"},{"title":"GameObject#getName","link":"<a href=\"GameObject.html#getName\">getName</a>","description":"<p>이 객체의 이름을 반환한다.</p>"},{"title":"GameObject#getPosition","link":"<a href=\"GameObject.html#getPosition\">getPosition</a>","description":"<p>이 객체의 좌표값을 반환한다.</p>"},{"title":"GameObject#getRotation","link":"<a href=\"GameObject.html#getRotation\">getRotation</a>","description":"<p>이 객체의 각도(degree)를 반환한다.</p>"},{"title":"GameObject#getScale","link":"<a href=\"GameObject.html#getScale\">getScale</a>","description":"<p>이 객체의 규모(스케일값)값을 반환한다.\n크기(size)를 반환하는게 아니다!</p>"},{"title":"GameObject#getSize","link":"<a href=\"GameObject.html#getSize\">getSize</a>","description":"<p>이 객체의 물리적 크기를 반환한다.</p>"},{"title":"GameObject#getStaticFriction","link":"<a href=\"GameObject.html#getStaticFriction\">getStaticFriction</a>","description":"<p>이 객체의 정지 마찰 계수를 반환한다.</p>"},{"title":"GameObject#getVelocity","link":"<a href=\"GameObject.html#getVelocity\">getVelocity</a>","description":"<p>이 객체의 속도를 반환한다.</p>"},{"title":"GameObject#getWorldBoundary","link":"<a href=\"GameObject.html#getWorldBoundary\">getWorldBoundary</a>","description":"<p>이 객체의 화면상 외형의 크기를 반환한다.\n기본적으로 BoxCollider를 사용하기 때문에 상자 형태의 크기가 반환된다.</p>"},{"title":"GameObject#getWorldPosition","link":"<a href=\"GameObject.html#getWorldPosition\">getWorldPosition</a>","description":"<p>이 객체의 화면상 좌표값을 반환한다.\nCanvas에 이 객체를 렌더링할 때 사용하는 matrix에서\nx, y값을 벡터로 만들어 반환한다.</p>"},{"title":"GameObject#getWorldRotation","link":"<a href=\"GameObject.html#getWorldRotation\">getWorldRotation</a>","description":"<p>이 객체의 화면상 각도(degree)를 반환한다.</p>"},{"title":"GameObject#getWorldScale","link":"<a href=\"GameObject.html#getWorldScale\">getWorldScale</a>","description":"<p>이 객체의 화면상 규모값을 반환한다.</p>"},{"title":"GameObject#getWorldSize","link":"<a href=\"GameObject.html#getWorldSize\">getWorldSize</a>","description":"<p>이 객체의 화면상 물리적 크기를 반환한다.\n이 객체의 크기에 화면상 규모를 곱한 값을 반환하게 된다.</p>"},{"title":"GameObject#hasParentGameObject","link":"<a href=\"GameObject.html#hasParentGameObject\">hasParentGameObject</a>","description":"<p>이 객체의 부모가 존재한다면 true를 반환한다.</p>"},{"title":"GameObject#hide","link":"<a href=\"GameObject.html#hide\">hide</a>","description":"<p>isVisible을 false로 설정한다.</p>"},{"title":"GameObject#integrateForce","link":"<a href=\"GameObject.html#integrateForce\">integrateForce</a>","description":"<p>가속도를 적분하여 속도에 누적한다.</p>"},{"title":"GameObject#integrateVelocity","link":"<a href=\"GameObject.html#integrateVelocity\">integrateVelocity</a>","description":"<p>속도를 적분하여 좌표값에 누적한다.</p>"},{"title":"GameObject#isActive","link":"<a href=\"GameObject.html#isActive\">isActive</a>","description":"<p>이 객체가 활성상태인지 의미한다.\n만약 이 값이 false라면 update와 render가 실행되지 않는다.\n이 값이 false라면 물리엔진에서도 수집하지 않는다.\n기본값은 true다.</p>"},{"title":"GameObject#isLeftMouseClickThis","link":"<a href=\"GameObject.html#isLeftMouseClickThis\">isLeftMouseClickThis</a>","description":"<p>마우스 왼쪽 버튼으로 이 객체를 클릭했는지를 반환한다.</p>"},{"title":"GameObject#isMouseOver","link":"<a href=\"GameObject.html#isMouseOver\">isMouseOver</a>","description":"<p>이 객체 위에 마우스가 올라가 있는지를 반환한다.\n기본적으로 worldSize값과 worldPosition을 이용해 계산한다.</p>"},{"title":"GameObject#isPhysicsEnable","link":"<a href=\"GameObject.html#isPhysicsEnable\">isPhysicsEnable</a>","description":"<p>이 객체에 물리효과를 적용할건지를 의미한다.\n기본적으론 적용하지 않는다.</p>"},{"title":"GameObject#isRightMouseClickThis","link":"<a href=\"GameObject.html#isRightMouseClickThis\">isRightMouseClickThis</a>","description":"<p>마우스 오른쪽 버튼으로 이 객체를 클릭했는지를 반환한다.</p>"},{"title":"GameObject#isVisible","link":"<a href=\"GameObject.html#isVisible\">isVisible</a>","description":"<p>화면에 이 객체를 그릴 것인지를 의미한다.\n기본값은 true다.</p>"},{"title":"GameObject#layer","link":"<a href=\"GameObject.html#layer\">layer</a>","description":"<p>객체의 레이어다.</p>"},{"title":"GameObject#matrix","link":"<a href=\"GameObject.html#matrix\">matrix</a>","description":"<p>이 객체의 transform을 행렬로 나타낸 결과다.\ncanvas에서 좌표, 회전, 규모를 이용해 물체를 그리려면 행렬을 이용해야한다.\n그래서 이 객체의 transform을 canvas에서 활용할 수 있게\nmatrix로 변환하여 저장한다.</p>"},{"title":"GameObject#multiplyParentMatrix","link":"<a href=\"GameObject.html#multiplyParentMatrix\">multiplyParentMatrix</a>","description":"<p>자신의 transform을 matrix로 변환한 것과 부모의 matrix를 행렬곱한다.</p>"},{"title":"GameObject#name","link":"<a href=\"GameObject.html#name\">name</a>","description":"<p>생성된 객체의 이름을 말한다.\n기본값으로는 생성자의 이름을 저장한다.</p>"},{"title":"GameObject#onCollision","link":"<a href=\"GameObject.html#onCollision\">onCollision</a>","description":"<p>이 객체가 물리효과에 의해 다른 객체와 충돌했을 때\n이 함수가 호출된다.</p>"},{"title":"GameObject#parent","link":"<a href=\"GameObject.html#parent\">parent</a>","description":"<p>이 객체의 부모 객체다.\n부모의 matrix를 이용해 자신의 matrix를 만들고,\n이 객체를 삭제할 때 부모에 의해 삭제되기 때문에\n이 객체의 부모를 기억해야 한다.</p>"},{"title":"GameObject#previousMatrix","link":"<a href=\"GameObject.html#previousMatrix\">previousMatrix</a>","description":"<p>이전 프레임의 matrix와 현재 프레임의 matrix를 선형보간하기 위해\n이전 프레임의 matrix를 저장해야한다.</p>"},{"title":"GameObject#removeChild","link":"<a href=\"GameObject.html#removeChild\">removeChild</a>","description":"<p>인자로 전달받은 객체가 자식 테이블에 존재한다면,\n그 객체를 자식 테이블에서 제거하고,\n씬 객체의 자식 테이블에 추가한다.</p>"},{"title":"GameObject#removeParent","link":"<a href=\"GameObject.html#removeParent\">removeParent</a>","description":"<p>이 객체의 부모와 이 객체 사이의 관계를 끊는다.\n이 객체는 부모로부터 떨어져 나오게 되는데,\n씬 객체를 새로운 부모로 설정한다.</p>"},{"title":"GameObject#render","link":"<a href=\"GameObject.html#render\">render</a>","description":"<p>먼저 선형보간한 matrix를 사용해 context에 등록한다.\n그 다음 draw()를 통해 물체를 렌더링한다.\n이 객체를 상속받은 Rect나 Circle처럼 자식객체에 따라\n각각 다른 렌더링이 수행된다.\n그 후 이 객체의 모든 자식들을 렌더링한다.</p>"},{"title":"GameObject#rigidbody","link":"<a href=\"GameObject.html#rigidbody\">rigidbody</a>","description":"<p>물리효과를 위한 강체다.</p>"},{"title":"GameObject#setAcceleration","link":"<a href=\"GameObject.html#setAcceleration\">setAcceleration</a>","description":"<p>이 객체의 가속도를 특정값으로 설정한다.</p>"},{"title":"GameObject#setName","link":"<a href=\"GameObject.html#setName\">setName</a>","description":"<p>이 객체의 이름을 설정한다.\n기본값으로는 생성자의 이름을 저장하게 된다.</p>"},{"title":"GameObject#setParent","link":"<a href=\"GameObject.html#setParent\">setParent</a>","description":"<p>인자로 받은 객체와 이 객체 사이에 부모-자식 관계를 만든다.\n만약 이 객체의 부모가 이미 있다면, 그 부모의 자식 테이블에서 이 객체를\n제거하고, 새로운 부모의 자식 테이블에 이 객체를 추가한다.</p>"},{"title":"GameObject#setPosition","link":"<a href=\"GameObject.html#setPosition\">setPosition</a>","description":"<p>이 객체의 좌표값을 특정값으로 설정한다.</p>"},{"title":"GameObject#setRotation","link":"<a href=\"GameObject.html#setRotation\">setRotation</a>","description":"<p>이 객체의 각도(degree)를 특정값으로 설정한다.</p>"},{"title":"GameObject#setScale","link":"<a href=\"GameObject.html#setScale\">setScale</a>","description":"<p>이 객체의 크기를 특정값으로 설정한다.</p>"},{"title":"GameObject#setTransform","link":"<a href=\"GameObject.html#setTransform\">setTransform</a>","description":"<p>계산된 matrix를 context2d에 적용한다.</p>"},{"title":"GameObject#setVelocity","link":"<a href=\"GameObject.html#setVelocity\">setVelocity</a>","description":"<p>이 객체의 속도를 특정값으로 설정한다.</p>"},{"title":"GameObject#show","link":"<a href=\"GameObject.html#show\">show</a>","description":"<p>isVisible을 true로 설정한다.</p>"},{"title":"GameObject#transform","link":"<a href=\"GameObject.html#transform\">transform</a>","description":"<p>이 객체의 좌표, 크기, 각도 등을 의미한다.</p>"},{"title":"GameObject#update","link":"<a href=\"GameObject.html#update\">update</a>","description":"<p>GameObject 내에서는 단순히 이 오브젝트에 등록된\n하위 GameObject들의 update를 실행시킨다.</p>"},{"title":"HTMLManager","link":"<a href=\"HTMLManager.html\">HTMLManager</a>"},{"title":"HTMLManager#defaultFaviconPath","link":"<a href=\"HTMLManager.html#defaultFaviconPath\">defaultFaviconPath</a>","description":"<p>페이지의 기본 아이콘의 경로</p>"},{"title":"HTMLManager#defaultTitle","link":"<a href=\"HTMLManager.html#defaultTitle\">defaultTitle</a>","description":"<p>페이지의 기본 제목</p>"},{"title":"HTMLManager.setFavicon","link":"<a href=\"HTMLManager.html#.setFavicon\">setFavicon</a>","description":"<p>페이지의 아이콘을 변경한다.</p>"},{"title":"HTMLManager.setTitle","link":"<a href=\"HTMLManager.html#.setTitle\">setTitle</a>","description":"<p>페이지의 제목을 변경한다.</p>"},{"title":"ImageResourceLoader","link":"<a href=\"ImageResourceLoader.html\">ImageResourceLoader</a>"},{"title":"ImageResourceLoader#load","link":"<a href=\"ImageResourceLoader.html#load\">load</a>","description":"<p>ImageElement를 생성해 반환한다.</p>"},{"title":"InputManager","link":"<a href=\"InputManager.html\">InputManager</a>","description":"<p>키 이벤트를 수신하기 위해 이벤트 리스너를 등록한다.</p>"},{"title":"InputManager#keyStatus","link":"<a href=\"InputManager.html#keyStatus\">keyStatus</a>","description":"<p>keyTable을 이용해 현재 키의 상태(KEY_STATUS)를 저장할 테이블이다.</p>"},{"title":"InputManager#keyTable","link":"<a href=\"InputManager.html#keyTable\">keyTable</a>","description":"<p>이전 프레임에서 키가 눌렸는가와\n현재 프레임에서 키가 눌렸는가를 저장할 테이블이다.</p>"},{"title":"InputManager#mousePosition","link":"<a href=\"InputManager.html#mousePosition\">mousePosition</a>","description":"<p>마우스의 위치를 나타낸다.</p>"},{"title":"InputManager#registerEventListener","link":"<a href=\"InputManager.html#registerEventListener\">registerEventListener</a>","description":"<p>키 이벤트를 수신하여 keyTable를 갱신하는 함수를 이벤트 리스너에 등록한다.</p>"},{"title":"InputManager#update","link":"<a href=\"InputManager.html#update\">update</a>","description":"<p>매 프레임마다 update를 호출해 이전 프레임의 키의 상태와\n현재 프레임의 키의 상태를 조합하여 현재 키의 상태를 결정한다.</p>\n<p>이전 프레임의 키의 상태 * 2 + 현재 프레임의 키의 상태\n= 현재 키의 상태\nkey status in | key status in |\npreviousFrame |  currentFrame |        result\n---------------+---------------+-----------------------\nfalse(0) |      false(0) |      0 (KEY_UP)\n---------------+---------------+-----------------------\nfalse(0) |       true(0) |      1 (KEY_DOWN)\n---------------+---------------+-----------------------\ntrue(0) |       true(0) |      3 (KEY_PRESSED)\n---------------+---------------+-----------------------\ntrue(0) |      false(0) |      2 (KEY_RELEASED)</p>\n<pre><code>          KEY_DOWN              KEY_RELEASED\n</code></pre>\n<p>key down        |                       |\nstatus  -------<em>_______________________</em>------------\n^ ^                     ^ ^\n--KEY_UP---' <code>-----KEY_PRESSED-----' </code>---KEY_UP--</p>"},{"title":"InputManager.getMousePos","link":"<a href=\"InputManager.html#.getMousePos\">getMousePos</a>","description":"<p>마우스의 좌표값을 반환한다.</p>"},{"title":"InputManager.isKeyDown","link":"<a href=\"InputManager.html#.isKeyDown\">isKeyDown</a>","description":"<p>키를 처음 누른 상태라면 true를 반환한다.</p>"},{"title":"InputManager.isKeyInKeyTable","link":"<a href=\"InputManager.html#.isKeyInKeyTable\">isKeyInKeyTable</a>","description":"<p>키가 keyTable에 존재한다면 true를 반환한다.</p>"},{"title":"InputManager.isKeyPressed","link":"<a href=\"InputManager.html#.isKeyPressed\">isKeyPressed</a>","description":"<p>키를 꾹 누르고 있는 상태라면 true를 반환한다.</p>"},{"title":"InputManager.isKeyReleased","link":"<a href=\"InputManager.html#.isKeyReleased\">isKeyReleased</a>","description":"<p>키를 막 뗀 상태라면 true를 반환한다.</p>"},{"title":"InputManager.isKeyUp","link":"<a href=\"InputManager.html#.isKeyUp\">isKeyUp</a>","description":"<p>키를 누르지 않은 상태라면 true를 반환한다.</p>"},{"title":"KEY_STATUS","link":"<a href=\"global.html#KEY_STATUS\">KEY_STATUS</a>","description":"<p>키의 상태를 나타내는 열거형이다.</p>"},{"title":"KEY_STATUS.DOWN","link":"<a href=\"global.html#KEY_STATUS#.DOWN\">DOWN</a>"},{"title":"KEY_STATUS.PRESSED","link":"<a href=\"global.html#KEY_STATUS#.PRESSED\">PRESSED</a>"},{"title":"KEY_STATUS.RELEASED","link":"<a href=\"global.html#KEY_STATUS#.RELEASED\">RELEASED</a>"},{"title":"KEY_STATUS.UP","link":"<a href=\"global.html#KEY_STATUS#.UP\">UP</a>"},{"title":"Layer","link":"<a href=\"Layer.html\">Layer</a>","description":"<p>전체 레이어 목록에 새로운 레이어가 없다면 이 레이어를 목록에 추가하고,\nphysicsInteractionMap에 있는 다른 레이어에 이 레이어를 추가하여\n충돌체크를 진행하게 한다.</p>"},{"title":"Layer#canPhysicsInteractLayerWith","link":"<a href=\"Layer.html#canPhysicsInteractLayerWith\">canPhysicsInteractLayerWith</a>","description":"<p>이 레이어와 다른 레이어가 충돌체크를 할 수 있다면 true를 반환한다.</p>"},{"title":"LayerManager","link":"<a href=\"LayerManager.html\">LayerManager</a>"},{"title":"LayerManager#layerSet","link":"<a href=\"LayerManager.html#layerSet\">layerSet</a>","description":"<p>전체 레이어의 목록을 나타낸다.\n새로운 Layer클래스를 생성하는 순간 Layer클래스의 생성자에 의해\nlayerSet에 그 레이어가 추가된다.</p>"},{"title":"LayerManager#physicsInteractionMap","link":"<a href=\"LayerManager.html#physicsInteractionMap\">physicsInteractionMap</a>","description":"<p>map에 각 레이어별로 Set을 만들어\n다른 레이어와 충돌체크가 가능한지 나타낸다.</p>\n<p>만약 어떤 레이어의 Set에 특정 레이어의 이름이 있다면\n그 레이어와 충돌체크를 진행하게 된다.\n반대로 어떤 레이어의 Set에 특정 레이어의 이름이 없다면\n그 레이어와 충돌체크를 진행하지 않는다.</p>\n<p>ex.\na의 Set이 {'a','b','c'}라면, a레이어는 a, b, c레이어와\n충돌체크를 진행하게 된다.</p>"},{"title":"LayerManager.initializePhysicsInteractionState","link":"<a href=\"LayerManager.html#.initializePhysicsInteractionState\">initializePhysicsInteractionState</a>","description":"<p>physicsInterationMap에 모든 레이어별로 Set을 생성하고,\n각 Set에 모든 레이어를 추가한다.</p>"},{"title":"LayerManager.setPhysicsInteration","link":"<a href=\"LayerManager.html#.setPhysicsInteration\">setPhysicsInteration</a>","description":"<p>두 레이어간 충돌체크를 할 것인지를 설정한다.\nisEnable이 true라면 두 레이어간 충돌체크를 활성화한다.</p>"},{"title":"Manifold","link":"<a href=\"Manifold.html\">Manifold</a>"},{"title":"Matrix","link":"<a href=\"Matrix.html\">Matrix</a>","description":"<p>3x3행렬의 기본행렬의 원소중에\na, b, c, d, x, y위치에 해당하는 값이 초기화된다.</p>"},{"title":"Matrix#a","link":"<a href=\"Matrix.html#a\">a</a>"},{"title":"Matrix#b","link":"<a href=\"Matrix.html#b\">b</a>"},{"title":"Matrix#c","link":"<a href=\"Matrix.html#c\">c</a>"},{"title":"Matrix#d","link":"<a href=\"Matrix.html#d\">d</a>"},{"title":"Matrix#multiply","link":"<a href=\"Matrix.html#multiply\">multiply</a>","description":"<p>이 matrix에 인자로 전달받은 matrix를 행렬곱하여 반환한다.</p>\n<pre><code> this    other        result\na c x   A C X   aA+cB aC+cD aX+cY+x\nb d y * B D Y = bA+dB bC+dD bX+dY+y\n0 0 1   0 0 1       0     0       1\n</code></pre>"},{"title":"Matrix#x","link":"<a href=\"Matrix.html#x\">x</a>"},{"title":"Matrix#y","link":"<a href=\"Matrix.html#y\">y</a>"},{"title":"Particle","link":"<a href=\"Particle.html\">Particle</a>"},{"title":"Particle#direction","link":"<a href=\"Particle.html#direction\">direction</a>"},{"title":"Particle#fadeAway","link":"<a href=\"Particle.html#fadeAway\">fadeAway</a>","description":"<p>각 파티클 효과가 켜져있다면 그 파티클 효과를 적용한다.</p>"},{"title":"Particle#forward","link":"<a href=\"Particle.html#forward\">forward</a>"},{"title":"Particle#initialLifeTime","link":"<a href=\"Particle.html#initialLifeTime\">initialLifeTime</a>"},{"title":"Particle#isAlphaFade","link":"<a href=\"Particle.html#isAlphaFade\">isAlphaFade</a>"},{"title":"Particle#isScaleFade","link":"<a href=\"Particle.html#isScaleFade\">isScaleFade</a>"},{"title":"Particle#lifeTime","link":"<a href=\"Particle.html#lifeTime\">lifeTime</a>"},{"title":"Particle#speed","link":"<a href=\"Particle.html#speed\">speed</a>"},{"title":"Particle#spreadOut","link":"<a href=\"Particle.html#spreadOut\">spreadOut</a>","description":"<p>만약 물리효과가 적용되지 않는다면 직접 position을 변경해야한다.</p>"},{"title":"Particle#update","link":"<a href=\"Particle.html#update\">update</a>","description":"<p>파티클 효과를 업데이트한다.\n지속 시간이 지났다면 제거한다.</p>"},{"title":"ParticleEffect","link":"<a href=\"ParticleEffect.html\">ParticleEffect</a>"},{"title":"ParticleEffect#accumulatedTime","link":"<a href=\"ParticleEffect.html#accumulatedTime\">accumulatedTime</a>","description":"<p>파티클 효과가 켜진 후 지난 시간을 나타낸다.\nelapsedTime과 다른 점은 이 값은 파티클 생성에 사용되기 때문에\n이 값이 unitTime보다 커질 경우 파티클을 생성하게 된다.</p>"},{"title":"ParticleEffect#countPerSecond","link":"<a href=\"ParticleEffect.html#countPerSecond\">countPerSecond</a>","description":"<p>1초동안 생성할 파티클의 개수를 의미한다.\n파티클 생성 주기는 이 값에 의해 결정된다.\n값의 범위는 1 ~ 100이다.\n기본값은 10이다.</p>"},{"title":"ParticleEffect#defaultParticleImage","link":"<a href=\"ParticleEffect.html#defaultParticleImage\">defaultParticleImage</a>","description":"<p>파티클 이미지가 없을 때 기본으로 사용할 이미지의 경로</p>"},{"title":"ParticleEffect#diffuseness","link":"<a href=\"ParticleEffect.html#diffuseness\">diffuseness</a>","description":"<p>파티클이 생성되고 나서 퍼져나갈 때 퍼짐 정도를 의미한다.\n파티클이 퍼져나가는 방향은 최종적으로 아래에 명시된 범위이다.\ndirection - diffuseness ~ direction + diffuseness</p>\n<p>만약 direction이 90도이고 diffuseness가 30도라면\n파티클은 60도 ~ 120도 사이 방향중에서 랜덤하게 결정된 방향으로 퍼진다.\n값의 범위는 0 ~ 180이다.\n기본값은 30(degree)이다</p>"},{"title":"ParticleEffect#direction","link":"<a href=\"ParticleEffect.html#direction\">direction</a>","description":"<p>파티클이 생성되어 퍼져나가는 주 방향을 의미한다.\n값의 범위는 0 ~ 360이다.\n기본값은 0(degree)이다.</p>"},{"title":"ParticleEffect#duration","link":"<a href=\"ParticleEffect.html#duration\">duration</a>","description":"<p>파티클 이펙트의 지속시간을 말한다.\n이 값이 0이라면 파티클 이펙트가 무한히 재생된다.\n이 값이 3이라면 3초 동안만 파티클 이펙트가 재생된다.\n기본값은 0이다.</p>"},{"title":"ParticleEffect#elapsedTime","link":"<a href=\"ParticleEffect.html#elapsedTime\">elapsedTime</a>","description":"<p>파티클 효과가 켜진 후 지난 시간을 나타낸다.</p>"},{"title":"ParticleEffect#imagePath","link":"<a href=\"ParticleEffect.html#imagePath\">imagePath</a>","description":"<p>파티클의 이미지 경로를 의미한다.\n기본값으로는 엔진에 딸린 이미지를 불러오게 된다.</p>"},{"title":"ParticleEffect#isAlphaFade","link":"<a href=\"ParticleEffect.html#isAlphaFade\">isAlphaFade</a>","description":"<p>이 값이 true라면 파티클이 점점 투명해진다.\n기본값은 true다.</p>"},{"title":"ParticleEffect#isEnable","link":"<a href=\"ParticleEffect.html#isEnable\">isEnable</a>","description":"<p>파티클이 생성되려면 isEnable이 true여야 한다.\n기본값은 false다.</p>"},{"title":"ParticleEffect#isParticlePhysicsEnable","link":"<a href=\"ParticleEffect.html#isParticlePhysicsEnable\">isParticlePhysicsEnable</a>","description":"<p>만약 isPhysicsEnabled가 true라면, 파티클에도 물리효과가 적용된다.\n기본값은 false다.</p>"},{"title":"ParticleEffect#isScaleFade","link":"<a href=\"ParticleEffect.html#isScaleFade\">isScaleFade</a>","description":"<p>이 값이 true라면 파티클이 점점 크기가 작아지는 효과를 낸다.\n기본값은 true다.</p>"},{"title":"ParticleEffect#lifeTime","link":"<a href=\"ParticleEffect.html#lifeTime\">lifeTime</a>","description":"<p>lifeTime은 생성된 파티클이 몇 초동안 화면에 보일지를 의미한다.\n값의 범위는 0.1 ~ 10.0이다.\n기본값은 3초다.</p>"},{"title":"ParticleEffect#run","link":"<a href=\"ParticleEffect.html#run\">run</a>","description":"<p>파티클 효과를 켠다.</p>"},{"title":"ParticleEffect#speed","link":"<a href=\"ParticleEffect.html#speed\">speed</a>","description":"<p>파티클이 날아가는 속도를 의미한다.\n값이 낮을수록 파티클이 멀리 퍼지지 않게 된다.\n값의 범위는 10 ~ 1000이다.\n기본값은 10이다.</p>"},{"title":"ParticleEffect#stop","link":"<a href=\"ParticleEffect.html#stop\">stop</a>","description":"<p>파티클 효과를 끈다.</p>"},{"title":"ParticleEffect#update","link":"<a href=\"ParticleEffect.html#update\">update</a>","description":"<p>만약 isEnable이 true라면 일정 시간마다 파티클을 생성한다.</p>"},{"title":"Path","link":"<a href=\"Path.html\">Path</a>"},{"title":"Path#assetFolderPath","link":"<a href=\"Path.html#assetFolderPath\">assetFolderPath</a>","description":"<p>상대 경로의 루트가 될 경로를 의미한다.</p>"},{"title":"Path.convertToAbsoluteAssetPath","link":"<a href=\"Path.html#.convertToAbsoluteAssetPath\">convertToAbsoluteAssetPath</a>","description":"<p>인자로 전달받은 경로를 에셋 폴더와 결합한 절대경로로 만들어 반환한다.</p>"},{"title":"Path.isAbsolutePath","link":"<a href=\"Path.html#.isAbsolutePath\">isAbsolutePath</a>","description":"<p>만약 경로가 '/'으로 시작한다면 절대경로임을 말한다.</p>"},{"title":"Path.setAssetFolderPath","link":"<a href=\"Path.html#.setAssetFolderPath\">setAssetFolderPath</a>","description":"<p>인자로 전달된 경로를 에셋 디렉토리로 설정한다.\n씬 생성자에서 미리 설정한다면 상대경로로 에셋을 불러올 수 있다.\njs는 로컬 파일에 직접 접근할 수 있는 방법이 매우 제한적이기 때문에\n부득이하게 생성자에서 미리 에셋 폴더를 설정해주어야 한다.\n아래 코드를 씬 생성자에서 실행하도록 설정하면 적용된다.\nPath.setAssetDirectory(import.meta.url);</p>"},{"title":"PhysicsManager","link":"<a href=\"PhysicsManager.html\">PhysicsManager</a>"},{"title":"PhysicsManager#physicsEnableGameObjectList","link":"<a href=\"PhysicsManager.html#physicsEnableGameObjectList\">physicsEnableGameObjectList</a>","description":"<p>물리효과가 적용될 객체들</p>"},{"title":"PhysicsManager.applyFriction","link":"<a href=\"PhysicsManager.html#.applyFriction\">applyFriction</a>","description":"<p>정지 마찰 계수와 운동 마찰 계수를 통해 마찰력을 적용한다.</p>"},{"title":"PhysicsManager.applyImpulse","link":"<a href=\"PhysicsManager.html#.applyImpulse\">applyImpulse</a>","description":"<p>두 객체에게 충격량을 적용한다.</p>"},{"title":"PhysicsManager.collectPhysicsEnabledGameObjectToList","link":"<a href=\"PhysicsManager.html#.collectPhysicsEnabledGameObjectToList\">collectPhysicsEnabledGameObjectToList</a>","description":"<p>씬 객체 내에 존재하는 모든 오브젝트들중\n물리효과를 받는 오브젝트들만 모아 리스트에 담는다.\n모든 객체를 조사해야하기 때문에 재귀호출하여 탐색한다.</p>"},{"title":"PhysicsManager.positionalCorrection","link":"<a href=\"PhysicsManager.html#.positionalCorrection\">positionalCorrection</a>","description":"<p>충돌처리가 되었지만 서서히 빠져버리는 버그를 해결하기 위해\n충돌된 위치에서 정해진 값만큼 강제로 떨어지게 한다.</p>"},{"title":"PhysicsManager.update","link":"<a href=\"PhysicsManager.html#.update\">update</a>","description":"<p>씬 객체 내에 존재하는 오브젝트들중\n물리효과가 켜진 오브젝트들에게 물리효과를 계산해 적용한다.</p>"},{"title":"Rect","link":"<a href=\"Rect.html\">Rect</a>"},{"title":"Rect#draw","link":"<a href=\"Rect.html#draw\">draw</a>","description":"<p>화면에 사각형과 윤곽선을 그린다.</p>"},{"title":"Rect#isStroke","link":"<a href=\"Rect.html#isStroke\">isStroke</a>","description":"<p>윤곽선을 그릴 것인지를 의미한다.\n윤곽선을 그리기 위해서는 옵션에서 strokeColor나\nstrokeWidth를 설정하여야한다.</p>"},{"title":"Rect#setStrokeWidth","link":"<a href=\"Rect.html#setStrokeWidth\">setStrokeWidth</a>","description":"<p>윤곽선의 두께를 설정한다.</p>"},{"title":"Rect#strokeColor","link":"<a href=\"Rect.html#strokeColor\">strokeColor</a>","description":"<p>윤곽선의 색상을 의미한다.\n만약 옵션에서 윤곽선에 대한 정보가 있다면 isStroke는 true로 설정되고\n윤곽선의 색상이 설정된다.</p>"},{"title":"RenderManager","link":"<a href=\"RenderManager.html\">RenderManager</a>"},{"title":"RenderManager#bufferCanvas","link":"<a href=\"RenderManager.html#bufferCanvas\">bufferCanvas</a>","description":"<p>bufferCanvas의 Element요소</p>"},{"title":"RenderManager#bufferCanvasId","link":"<a href=\"RenderManager.html#bufferCanvasId\">bufferCanvasId</a>","description":"<p>bufferCanvas의 id값</p>"},{"title":"RenderManager#renderCanvas","link":"<a href=\"RenderManager.html#renderCanvas\">renderCanvas</a>","description":"<p>renderCanvas의 Element요소</p>"},{"title":"RenderManager#renderCanvasHeight","link":"<a href=\"RenderManager.html#renderCanvasHeight\">renderCanvasHeight</a>","description":"<p>renderCanvans의 세로 길이</p>"},{"title":"RenderManager#renderCanvasId","link":"<a href=\"RenderManager.html#renderCanvasId\">renderCanvasId</a>","description":"<p>renderCanvas의 id값</p>"},{"title":"RenderManager#renderCanvasMinHeight","link":"<a href=\"RenderManager.html#renderCanvasMinHeight\">renderCanvasMinHeight</a>","description":"<p>renderCanvans의 최소 세로 길이</p>"},{"title":"RenderManager#renderCanvasMinWidth","link":"<a href=\"RenderManager.html#renderCanvasMinWidth\">renderCanvasMinWidth</a>","description":"<p>renderCanvans의 최소 가로 길이</p>"},{"title":"RenderManager#renderCanvasWidth","link":"<a href=\"RenderManager.html#renderCanvasWidth\">renderCanvasWidth</a>","description":"<p>renderCanvans의 가로 길이</p>"},{"title":"RenderManager.changeBufferCanvasResolution","link":"<a href=\"RenderManager.html#.changeBufferCanvasResolution\">changeBufferCanvasResolution</a>","description":"<p>bufferCanvas의 크기(width, height)를 변경한다.</p>"},{"title":"RenderManager.changeRenderCanvasStyleVariable","link":"<a href=\"RenderManager.html#.changeRenderCanvasStyleVariable\">changeRenderCanvasStyleVariable</a>","description":"<p>renderCanvas의 style에 사용되는 변수를 업데이트하여\n화면에 나타나는 renderCanvans의 크기를 변경한다.</p>"},{"title":"RenderManager.changeResolution","link":"<a href=\"RenderManager.html#.changeResolution\">changeResolution</a>","description":"<p>renderCanvas의 크기(width, height)를 변경한다.\n크기를 변경하면 style에도 영향이 있기 때문에 renderCanvas의 CSS도 변경한다.</p>"},{"title":"RenderManager.clearScreen","link":"<a href=\"RenderManager.html#.clearScreen\">clearScreen</a>","description":"<p>renderCanvas를 깨끗이 지운다.</p>"},{"title":"RenderManager.getBufferCanvas","link":"<a href=\"RenderManager.html#.getBufferCanvas\">getBufferCanvas</a>","description":"<p>bufferCanvas를 getElementById로 찾아 반환한다.\n만약 존재하지 않는 element라면 새로 element를 생성해 반환한다.</p>"},{"title":"RenderManager.getRenderCanvas","link":"<a href=\"RenderManager.html#.getRenderCanvas\">getRenderCanvas</a>","description":"<p>renderCanvas를 getElementById로 찾아 반환한다.\n만약 존재하지 않는 element라면 새로 element를 생성해 반환한다.</p>"},{"title":"RenderManager.render","link":"<a href=\"RenderManager.html#.render\">render</a>","description":"<p>현재 씬을 렌더링한다.</p>\n<ol>\n<li>먼저 게임화면의 크기를 브라우저의 크기에 맞춘다.</li>\n<li>그다음 화면을 지운다.</li>\n<li>깨끗해진 화면에 현재 프레임의 모든 오브젝트를 렌더링한다.</li>\n</ol>"},{"title":"RenderManager.updateRenderCanvasSizeByWindowSize","link":"<a href=\"RenderManager.html#.updateRenderCanvasSizeByWindowSize\">updateRenderCanvasSizeByWindowSize</a>","description":"<p>브라우저의 크기에 따라 canvas의 크기를 조절한다.\n조절한 크기를 renderCanvas의 style에 적용한다.</p>"},{"title":"ResourceLoader","link":"<a href=\"ResourceLoader.html\">ResourceLoader</a>"},{"title":"ResourceLoader#defaultResourcePath","link":"<a href=\"ResourceLoader.html#defaultResourcePath\">defaultResourcePath</a>","description":"<p>생성자명에 따른 기본 리소스명을 의미한다.\n만약 리소스의 경로가 주어지지 않았다면 이 객체를 이용해\n기본 리소스를 생성하게 된다.</p>"},{"title":"ResourceLoader#load","link":"<a href=\"ResourceLoader.html#load\">load</a>","description":"<p>이 클래스를 상속했다면 load()를 재정의하여\n구체적인 리소스 생성방법을 정의해야한다.</p>"},{"title":"ResourceLoaderFactory","link":"<a href=\"ResourceLoaderFactory.html\">ResourceLoaderFactory</a>"},{"title":"ResourceLoaderFactory.create","link":"<a href=\"ResourceLoaderFactory.html#.create\">create</a>"},{"title":"ResourceManager","link":"<a href=\"ResourceManager.html\">ResourceManager</a>"},{"title":"ResourceManager#allResourceLoadedCallback","link":"<a href=\"ResourceManager.html#allResourceLoadedCallback\">allResourceLoadedCallback</a>","description":"<p>모든 리소스가 불러와졌을 때 실행할 콜백함수</p>"},{"title":"ResourceManager#loadedResourceCount","link":"<a href=\"ResourceManager.html#loadedResourceCount\">loadedResourceCount</a>","description":"<p>불러온 리소스의 개수</p>"},{"title":"ResourceManager#totalResourceCount","link":"<a href=\"ResourceManager.html#totalResourceCount\">totalResourceCount</a>","description":"<p>불러와야할 리소스의 총 개수</p>"},{"title":"ResourceManager.addResourceCount","link":"<a href=\"ResourceManager.html#.addResourceCount\">addResourceCount</a>","description":"<p>로드할 리소스의 총 개수를 증가시킨다.</p>"},{"title":"ResourceManager.getLoadedResourceCount","link":"<a href=\"ResourceManager.html#.getLoadedResourceCount\">getLoadedResourceCount</a>","description":"<p>로드한 리소스의 개수를 반환한다.</p>"},{"title":"ResourceManager.getTotalResourceCount","link":"<a href=\"ResourceManager.html#.getTotalResourceCount\">getTotalResourceCount</a>","description":"<p>로드해야할 리소스의 총 개수를 반환한다.</p>"},{"title":"ResourceManager.isAllResourceLoaded","link":"<a href=\"ResourceManager.html#.isAllResourceLoaded\">isAllResourceLoaded</a>","description":"<p>모든 리소스가 로드되었는지를 확인한다.</p>"},{"title":"ResourceManager.loadResource","link":"<a href=\"ResourceManager.html#.loadResource\">loadResource</a>","description":"<p>path를 경로로 하는 리소스를 생성한다.\n이 때 리소스는 constructor에 의해 생성된다.</p>"},{"title":"ResourceManager.onResourceLoad","link":"<a href=\"ResourceManager.html#.onResourceLoad\">onResourceLoad</a>","description":"<p>로드한 리소스의 개수를 count만큼 증가시킨다.</p>"},{"title":"ResourceManager.removeResourceLoadedCallback","link":"<a href=\"ResourceManager.html#.removeResourceLoadedCallback\">removeResourceLoadedCallback</a>","description":"<p>모든 리소스가 로드되었을 때 실행될 콜백함수를 초기화한다.</p>"},{"title":"ResourceManager.setAllResourceLoadedCallback","link":"<a href=\"ResourceManager.html#.setAllResourceLoadedCallback\">setAllResourceLoadedCallback</a>","description":"<p>모든 리소스가 로드되었을 때 실행할 콜백함수를 설정한다.</p>"},{"title":"RigidBody","link":"<a href=\"RigidBody.html\">RigidBody</a>"},{"title":"RigidBody#bounceness","link":"<a href=\"RigidBody.html#bounceness\">bounceness</a>","description":"<p>강체의 탄성계수를 나타낸다.\n1에 가까울수록 충격량을 크게 받아 탄성이 커져보이게 된다.\n기본값은 0.5다.\n값의 범위는 0 ~ 1이다.</p>"},{"title":"RigidBody#dynamicFriction","link":"<a href=\"RigidBody.html#dynamicFriction\">dynamicFriction</a>","description":"<p>강체의 운동 마찰 계수를 나타낸다.\n기본값은 0.1다.\n값의 범위는 0 ~ 1이다.</p>"},{"title":"RigidBody#isGravity","link":"<a href=\"RigidBody.html#isGravity\">isGravity</a>","description":"<p>중력의 영향을 받는 상태인지를 나타낸다.</p>"},{"title":"RigidBody#isStatic","link":"<a href=\"RigidBody.html#isStatic\">isStatic</a>","description":"<p>정적(static)상태인지를 나타낸다.\n만약 정적 상태라면 이 강체는 물리 효과가 적용되어 있지만,\n상호작용은 하지 않는다.\n하지만 이 강체와 충돌하는 다른 강체는 물리효과를 받는다.</p>"},{"title":"RigidBody#isTrigger","link":"<a href=\"RigidBody.html#isTrigger\">isTrigger</a>","description":"<p>트리거 상태인지를 나타낸다.\n트리거 상태라면 물리적인 상호작용은 하지 않고,\n이 객체에 충돌된 상태인지만 검사하게 된다.</p>"},{"title":"RigidBody#mass","link":"<a href=\"RigidBody.html#mass\">mass</a>","description":"<p>강체의 질량을 나타낸다.\n기본값은 1이다.\n값의 범위는 0.1 ~ 10이다.</p>"},{"title":"RigidBody#staticFriction","link":"<a href=\"RigidBody.html#staticFriction\">staticFriction</a>","description":"<p>강체의 정지 마찰 계수를 나타낸다.\n기본값은 0.2다.\n값의 범위는 0 ~ 1이다.</p>"},{"title":"SceneManager","link":"<a href=\"SceneManager.html\">SceneManager</a>"},{"title":"SceneManager#currentScene","link":"<a href=\"SceneManager.html#currentScene\">currentScene</a>","description":"<p>엔진에 연결된 현재 씬</p>"},{"title":"SceneManager.changeScene","link":"<a href=\"SceneManager.html#.changeScene\">changeScene</a>","description":"<p>currentScene에 다른 씬을 저장한다.\nEngine에서 currentScene을 update, render하므로\n결과적으로는 씬이 교체된다.\n만약 리소스를 불러와야하는 객체가 포함된 씬이라면,\nloadScene을 이용해야한다.</p>"},{"title":"SceneManager.getCurrentScene","link":"<a href=\"SceneManager.html#.getCurrentScene\">getCurrentScene</a>","description":"<p>현재 엔진이 업데이트하고 있는 씬 객체를 반환한다.</p>"},{"title":"SoundEffect","link":"<a href=\"SoundEffect.html\">SoundEffect</a>"},{"title":"SoundEffect#pause","link":"<a href=\"SoundEffect.html#pause\">pause</a>","description":"<p>사운드 파일을 일시정지한다.</p>"},{"title":"SoundEffect#play","link":"<a href=\"SoundEffect.html#play\">play</a>","description":"<p>사운드 파일을 재생한다.</p>"},{"title":"SoundEffect#setVolumn","link":"<a href=\"SoundEffect.html#setVolumn\">setVolumn</a>","description":"<p>이 사운드 파일의 볼륨을 설정한다.</p>"},{"title":"SoundEffect#stop","link":"<a href=\"SoundEffect.html#stop\">stop</a>","description":"<p>사운드 파일을 중지한다.</p>"},{"title":"Sprite","link":"<a href=\"Sprite.html\">Sprite</a>"},{"title":"Sprite#disableColorOverlay","link":"<a href=\"Sprite.html#disableColorOverlay\">disableColorOverlay</a>","description":"<p>색상 오버레이를 끈다.</p>"},{"title":"Sprite#draw","link":"<a href=\"Sprite.html#draw\">draw</a>","description":"<p>도형이나 텍스트는 렌더링을 할 때 색상을 설정하여 입힐 수 있지만,\n이미지는 그렇지 않다.\ngetImageData로 캔버스의 특정 영역의 색상값을 읽어올 수 있지만,\n다른 이미지와 겹쳐졌을 때에는 원하는 결과를 얻을 수 없다.\n따라서 아래의 과정을 거쳐 오버레이를 씌울 수 있다.</p>\n<ol>\n<li>빈 버퍼 캔버스에 미리 이미지를 그린다.</li>\n<li>그 후 버퍼 캔버스에 컬러 오버레이를 씌운다.</li>\n<li>완성된 버퍼 캔버스를 주 캔버스에 렌더링한다.</li>\n</ol>\n<p>TODO\n색깔을 입힐 수는 있지만 rgb(255, 0, 0) 처럼 빨간색만 씌운다고 할 때\n이미지 전체가 빨갛게 변해버린다.\n알파값을 조절해서 빨간색 오버레이를 씌운 것처럼 보이게 할 수 있지만\n물빠진 색감이 되어버린다.</p>"},{"title":"Sprite#enableColorOverlay","link":"<a href=\"Sprite.html#enableColorOverlay\">enableColorOverlay</a>","description":"<p>색상 오버레이를 켠다.</p>"},{"title":"Sprite#image","link":"<a href=\"Sprite.html#image\">image</a>","description":"<p>화면에 보여질 이미지를 의미한다.</p>"},{"title":"Sprite#isColorOverlayEnable","link":"<a href=\"Sprite.html#isColorOverlayEnable\">isColorOverlayEnable</a>","description":"<p>색상 오버레이를 씌울 것인지를 의미한다.\n기본값은 false다.</p>"},{"title":"Sprite#overlayColor","link":"<a href=\"Sprite.html#overlayColor\">overlayColor</a>","description":"<p>색상 오버레이를 씌울 때 어떤 색을 씌울 것인지를 의미한다.\n만약 이 색의 Alpha가 1이면 이미지 전체에 불투명한 색을 덧입히기 때문에\n완전히 다른 색으로 덮히게 되어 이미지가 보이지 않는다.</p>"},{"title":"Sprite#setOverlayColor","link":"<a href=\"Sprite.html#setOverlayColor\">setOverlayColor</a>","description":"<p>색상 오버레이의 색을 설정한다.</p>"},{"title":"Sprite#updateSize","link":"<a href=\"Sprite.html#updateSize\">updateSize</a>","description":"<p>이 객체의 물리적인 크기를 이미지의 크기로 설정한다.</p>"},{"title":"TerrainLayer","link":"<a href=\"TerrainLayer.html\">TerrainLayer</a>"},{"title":"Text","link":"<a href=\"Text.html\">Text</a>"},{"title":"Text#font","link":"<a href=\"Text.html#font\">font</a>","description":"<p>폰트를 말한다.\n만약 외부 폰트를 사용하려고 한다면\nstyle.css에서 @import(url)로 불러와야 사용가능하다.\n기본값은 맑은 고딕(malgeun gothic)이다.</p>"},{"title":"Text#fontSize","link":"<a href=\"Text.html#fontSize\">fontSize</a>","description":"<p>글자 크기를 말한다.\n기본값은 12다.</p>"},{"title":"Text#lineHeight","link":"<a href=\"Text.html#lineHeight\">lineHeight</a>","description":"<p>줄 간격을 말한다.\n기본값은 fontSize의 1.25배다.</p>"},{"title":"Text#parseText","link":"<a href=\"Text.html#parseText\">parseText</a>","description":"<p>'\\n'을 기준으로 문자열을 나눈다.</p>"},{"title":"Text#setFont","link":"<a href=\"Text.html#setFont\">setFont</a>","description":"<p>폰트를 정한다.</p>"},{"title":"Text#setFontSize","link":"<a href=\"Text.html#setFontSize\">setFontSize</a>","description":"<p>글자 크기를 정한다.</p>"},{"title":"Text#setLineHeight","link":"<a href=\"Text.html#setLineHeight\">setLineHeight</a>","description":"<p>줄 간격을 정한다.</p>"},{"title":"Text#setText","link":"<a href=\"Text.html#setText\">setText</a>","description":"<p>문자열을 지정한다.\n인자로 전달된 문자열을 파싱해 '\\n'이 포함되어 있다면\n'\\n'을 기준으로 문자열을 쪼갠다.</p>"},{"title":"Text#text","link":"<a href=\"Text.html#text\">text</a>","description":"<p>화면에 보여질 문자열을 말한다.\n줄바꿈을 하고 싶다면 문자열에 '\\n'을 넣으면 된다.\n이렇게 하면 '\\n'을 기준으로 문자열을 나눠서\n한 줄씩 여러번 출력하게 된다.\n기본값은 팬그램 문자열이다.</p>"},{"title":"Timer","link":"<a href=\"Timer.html\">Timer</a>"},{"title":"Timer#accumulatedTime","link":"<a href=\"Timer.html#accumulatedTime\">accumulatedTime</a>","description":"<p>매 프레임마다 누적된 deltaTime을 저장한다.</p>"},{"title":"Timer#currentTime","link":"<a href=\"Timer.html#currentTime\">currentTime</a>","description":"<p>현재 프레임의 시간을 말한다.\n웹페이지가 열린 후 지난 시간이 저장된다.</p>"},{"title":"Timer#deltaTime","link":"<a href=\"Timer.html#deltaTime\">deltaTime</a>","description":"<p>현재 프레임의 시간과 이전 프레임의 시간의 차를 말한다.</p>"},{"title":"Timer#fixedDeltaTime","link":"<a href=\"Timer.html#fixedDeltaTime\">fixedDeltaTime</a>","description":"<p>물리엔진에서는 가속도를 적분하여 속도를 나타내고,\n속도를 적분하여 이동거리를 나타내기 때문에\n정확한 연산을 위해서는 수식에서 사용할 ∇t가 일정해야한다.\n따라서 fixedDeltaTime은 이론적으로 1 프레임을 렌더링할 때\n걸리는 시간을 ∇t로 정한다.</p>"},{"title":"Timer#fps","link":"<a href=\"Timer.html#fps\">fps</a>","description":"<p>1초에 보여줄 프레임의 개수를 말한다.\n기본값으로 60이고, 24부터 MAX_VALUE 사이의 값을 저장할 수 있다.</p>"},{"title":"Timer#getCurrentTime","link":"<a href=\"Timer.html#getCurrentTime\">getCurrentTime</a>","description":"<p>브라우저가 열린 후 또는 새로고침된 후 지난 시간을 반환한다.</p>"},{"title":"Timer#previousTime","link":"<a href=\"Timer.html#previousTime\">previousTime</a>","description":"<p>이전 프레임의 시간을 말한다.</p>"},{"title":"Timer#setFixedDeltaTime","link":"<a href=\"Timer.html#setFixedDeltaTime\">setFixedDeltaTime</a>","description":"<p>물리엔진을 업데이트하기위한 fixedDeltaTime을 설정한다.\n이 때 Timer의 fps속성을 이용하여 계산한다.</p>"},{"title":"Timer#setFps","link":"<a href=\"Timer.html#setFps\">setFps</a>","description":"<p>1초에 렌더링할 프레임의 개수를 설정한다.</p>"},{"title":"Timer#update","link":"<a href=\"Timer.html#update\">update</a>","description":"<p>현재 프레임과 이전 프레임간의 시간차를 구해 deltaTime에 저장하고,\n그 값을 accumulatedTime에 누적한다.</p>\n<p>만약 accumulatedTime이 일정값보다 크다면 강제로 조정한다.\n이걸 조정하지 않으면 누적된 시간만큼 물리엔진을 업데이트하기 때문에\n긴 딜레이가 걸릴 수 있으므로 일부러 값을 낮춘다.</p>"},{"title":"Transform","link":"<a href=\"Transform.html\">Transform</a>"},{"title":"Transform#acceleration","link":"<a href=\"Transform.html#acceleration\">acceleration</a>","description":"<p>가속도를 나타낸다.\n기본값은 (0, 0)이다.</p>"},{"title":"Transform#position","link":"<a href=\"Transform.html#position\">position</a>","description":"<p>좌표값을 나타낸다. 이 좌표값은 물체의 중심좌표를 말한다.\n기본값은 (0, 0)이다.</p>"},{"title":"Transform#rotation","link":"<a href=\"Transform.html#rotation\">rotation</a>","description":"<p>각도를 나타낸다. 라디안이 아닌 degree를 쓴다.\n기본값은 0이다.</p>"},{"title":"Transform#scale","link":"<a href=\"Transform.html#scale\">scale</a>","description":"<p>규모를 나타낸다.\n기본값은 (1, 1)이다.</p>"},{"title":"Transform#setSize","link":"<a href=\"Transform.html#setSize\">setSize</a>","description":"<p>물리적인 크기를 변경한다.</p>"},{"title":"Transform#size","link":"<a href=\"Transform.html#size\">size</a>","description":"<p>물리적인 크기를 나타낸다.\nGameObject를 상속받은 이미지나 도형들은\n이 값도 필수적으로 변경해야한다.</p>"},{"title":"Transform#toMatrix","link":"<a href=\"Transform.html#toMatrix\">toMatrix</a>","description":"<p>Transform의 좌표, 회전, 규모를 한 번에 나타낼 수 있게\nmatrix형태로 변환한다.\n변환한 matrix는 행렬곱을 통해 부모-자식간의 상대좌표를\n화면상의 절대좌표로 변환할 수 있게 해준다.</p>"},{"title":"Transform#velocity","link":"<a href=\"Transform.html#velocity\">velocity</a>","description":"<p>속도를 나타낸다.\n기본값은 (0, 0)이다.</p>"},{"title":"UnitLayer","link":"<a href=\"UnitLayer.html\">UnitLayer</a>"},{"title":"Vector","link":"<a href=\"Vector.html\">Vector</a>"},{"title":"Vector#add","link":"<a href=\"Vector.html#add\">add</a>","description":"<p>이 벡터에 다른 벡터를 더한 벡터를 반환한다.</p>"},{"title":"Vector#dot","link":"<a href=\"Vector.html#dot\">dot</a>","description":"<p>이 벡터와 다른 벡터간 내적을 한 결과를 반환한다.</p>"},{"title":"Vector#elementMultiply","link":"<a href=\"Vector.html#elementMultiply\">elementMultiply</a>","description":"<p>이 벡터와 다른 벡터와 성분끼리 곱해 만든 벡터를 반환한다.</p>"},{"title":"Vector#getDegree","link":"<a href=\"Vector.html#getDegree\">getDegree</a>","description":"<p>이 벡터와 x축 사이의 각도(degree)를 반환한다.</p>"},{"title":"Vector#isEquals","link":"<a href=\"Vector.html#isEquals\">isEquals</a>","description":"<p>이 벡터의 성분이 다른 벡터의 성분과 일치한다면 true를 반환한다.</p>"},{"title":"Vector#length","link":"<a href=\"Vector.html#length\">length</a>","description":"<p>이 벡터의 물리적인 크기(다른 말로는 norm, magnitude)를 반환한다.</p>"},{"title":"Vector#minus","link":"<a href=\"Vector.html#minus\">minus</a>","description":"<p>이 벡터에 다른 벡터를 뺀 벡터를 반환한다.</p>"},{"title":"Vector#multiply","link":"<a href=\"Vector.html#multiply\">multiply</a>","description":"<p>이 벡터에 스칼라곱을 한 벡터를 반환한다.</p>"},{"title":"Vector#normalize","link":"<a href=\"Vector.html#normalize\">normalize</a>","description":"<p>이 벡터를 단위벡터로 바꾸어 반환한다.</p>"},{"title":"Vector#squareLength","link":"<a href=\"Vector.html#squareLength\">squareLength</a>","description":"<p>이 벡터의 물리적인 크기를 반환하되, 제곱근연산을 하지 않은 채로 반환한다.</p>"},{"title":"Vector.down","link":"<a href=\"Vector.html#.down\">down</a>","description":"<p>(0, 1)을 갖는 벡터를 반환합니다.</p>"},{"title":"Vector.left","link":"<a href=\"Vector.html#.left\">left</a>","description":"<p>(-1, 0)을 갖는 벡터를 반환합니다.</p>"},{"title":"Vector.right","link":"<a href=\"Vector.html#.right\">right</a>","description":"<p>(1, 0)을 갖는 벡터를 반환합니다.</p>"},{"title":"Vector.up","link":"<a href=\"Vector.html#.up\">up</a>","description":"<p>(0, -1)을 갖는 벡터를 반환합니다.</p>"},{"title":"Vector.zero","link":"<a href=\"Vector.html#.zero\">zero</a>","description":"<p>(0, 0)을 갖는 벡터를 반환합니다.</p>"},{"title":"findKeyInObjectWithValue","link":"<a href=\"global.html#findKeyInObjectWithValue\">findKeyInObjectWithValue</a>","description":"<p>주어진 객체가 갖고 있는 프로퍼티중에\nvalue를 값으로 갖는 키를 반환한다.</p>"},{"title":"getAvailableFpsAndResolution","link":"<a href=\"global.html#getAvailableFpsAndResolution\">getAvailableFpsAndResolution</a>","description":"<p>현재 모니터의 해상도에 따라 적용 가능한 해상도와 fps를 가져온다.</p>"},{"title":"getAvailableFpsList","link":"<a href=\"global.html#getAvailableFpsList\">getAvailableFpsList</a>","description":"<p>현재 모니터의 fps에 따라 가능한 fps들을 리스트로 반환한다.</p>"},{"title":"getAvailableResolution","link":"<a href=\"global.html#getAvailableResolution\">getAvailableResolution</a>","description":"<p>현재 모니터의 해상도에 따라 적용 가능한 해상도들을 리스트로 반환한다.</p>"},{"title":"getCurrentFps","link":"<a href=\"global.html#getCurrentFps\">getCurrentFps</a>","description":"<p>requestAnimationFrame를 두 번 실행시켜 deltaTime을 구한 후\n그 값으로 모니터의 fps를 계산해 반환한다.</p>"},{"title":"makeForm","link":"<a href=\"global.html#makeForm\">makeForm</a>","description":"<p>해상도와 fps, 실행할 디바이스를 선택할 수 있는 form을 생성한다.\n플레이어가 submit할 경우 인자로 전달된 콜백함수를 실행한다.\n콜백함수가 실행된 뒤엔 body에 등록된 form을 제거한다.</p>"},{"title":"sceneConstructor","link":"<a href=\"global.html#sceneConstructor\">sceneConstructor</a>","description":"<p>새로운 씬을 생성해 currentScene에 저장하여 씬을 교체한다.\n만약 새로운 씬이 리소스를 불러와야 하는 객체를 갖고 있지 않으면\n곧바로 씬을 교체하고, 그렇지 않으면 ResourceManager에\n콜백함수를 등록하여 모든 리소스가 불러와졌을 때 콜백함수를 실행함으로\ncurrentScene을 교체하게 된다.</p>"},{"title":"typeCheck","link":"<a href=\"global.html#typeCheck\">typeCheck</a>","description":"<p>value의 타입이 Type이라면 value를 그대로 반환하고,\n그렇지 않으면 defaultValue를 반환한다.</p>"},{"title":"typeCheckAndClamp","link":"<a href=\"global.html#typeCheckAndClamp\">typeCheckAndClamp</a>","description":"<p>value의 타입이 number라면 min과 max사이로 값을 강제하고,\n그렇지 않으면 defaultValue를 반환한다.</p>"},{"title":"value를 min, max의 범위 내로 강제한다.","link":"<a href=\"value%25EB%25A5%25BC%2520min.html#max%25EC%259D%2598%25EB%25B2%2594%25EC%259C%2584%25EB%2582%25B4%25EB%25A1%259C%25EA%25B0%2595%25EC%25A0%259C%25ED%2595%259C%25EB%258B%25A4.\"> max의 범위 내로 강제한다.</a>"},{"title":"writeErrorMessageOnDocument","link":"<a href=\"global.html#writeErrorMessageOnDocument\">writeErrorMessageOnDocument</a>","description":"<p>발생한 에러 메시지의 스택을 document에 출력한다.</p>"}]}